;(function () {
   const reviewsBtns = document.querySelector('.reviews__btns'),
      reviewsBtnsNext = reviewsBtns.querySelector('.reviews__btn-next'),
      reviewsBtnsPrev = reviewsBtns.querySelector('.reviews__btn-prev'),
      sliderContainer = document.querySelector('.app-slider__container'),
      sliderList = document.querySelector('.app-slider__list'),
      sliderItems = document.querySelectorAll('.app-slider__item');

   let sliderItemWidth = parseFloat(window.getComputedStyle(sliderList).gridAutoColumns),
      ItemGap = parseFloat(window.getComputedStyle(sliderList).columnGap),
      lastIndex = Math.ceil(sliderItems.length) - 1;

   let units = sliderItemWidth !== 100 ? 'px' : '%',
      currentIndex = 0,
      step = 0,
      xDown = null,
      yDown = null;

   sliderContainer.addEventListener('touchstart', handleTouchStart, false);
   sliderContainer.addEventListener('touchmove', handleTouchMove, false);
   reviewsBtns.addEventListener('click', handleClick, false);

   function handleTouchStart(e) {
      xDown = e.touches[0].clientX;
      yDown = e.touches[0].clientY;
   };

   function handleTouchMove(e) {
      if (!xDown || !yDown) return;

      let xUp = e.touches[0].clientX;
      let yUp = e.touches[0].clientY;

      let xDiff = xDown - xUp;
      let yDiff = yDown - yUp;

      if (Math.abs(xDiff) > Math.abs(yDiff)) {
         if (xDiff > 0 && currentIndex < lastIndex) currentIndex++;
         if (xDiff < 0 && currentIndex > 0) currentIndex--;
      }

      moveSlide();

      xDown = null;
      yDown = null;
   };

   function handleClick(e) {
      if (e.target === reviewsBtnsNext && currentIndex < lastIndex) currentIndex++;
      if (e.target === reviewsBtnsPrev && currentIndex > 0) currentIndex--;

      moveSlide();
   };

   function moveSlide() {
      if (currentIndex <= 0) {
         reviewsBtnsPrev.classList.add('reviews__btn--disabled');
      } else {
         reviewsBtnsPrev.classList.remove('reviews__btn--disabled');
      }
      if (currentIndex >= lastIndex) {
         reviewsBtnsNext.classList.add('reviews__btn--disabled');
      } else {
         reviewsBtnsNext.classList.remove('reviews__btn--disabled');
      }

      step = currentIndex * (sliderItemWidth + ItemGap);
      sliderList.style.transform = `translateX(-${step}${units})`;
   };
})();;(function () {
   const hamburgerMenu = document.querySelector('.hamburger-menu');
   const menuFullscreen = document.querySelector('.menu-fullscreen');

   hamburgerMenu.addEventListener('click', () => {
      menuFullscreen.classList.add('menu-fullscreen--active');
   });

   menuFullscreen.addEventListener('click', (e) => {
      if (e.target.closest('a')) {
         menuFullscreen.classList.remove('menu-fullscreen--active');
      }
   });
})();;(function () {
   const questions = document.querySelector('.questions');
   const questionsItems = Array.from(questions.children);

   displayAnswer();

   function displayAnswer() {
      let currentActive = null;
      
      questions.addEventListener('click', e => {
         currentActive = e.target.closest('.questions__item');
         
         questionsItems.forEach(item => {
            if (item.classList.contains('questions__item--active') && item !==currentActive) {
               item.classList.remove('questions__item--active');
            }
         });
         
         currentActive.classList.toggle('questions__item--active');
      });
   }
})()
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC1zbGlkZXIuanMiLCJtZW51LWZ1bGxzY3JlZW4uanMiLCJxdWVzdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0NyRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbiAoKSB7XHJcbiAgIGNvbnN0IHJldmlld3NCdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJldmlld3NfX2J0bnMnKSxcclxuICAgICAgcmV2aWV3c0J0bnNOZXh0ID0gcmV2aWV3c0J0bnMucXVlcnlTZWxlY3RvcignLnJldmlld3NfX2J0bi1uZXh0JyksXHJcbiAgICAgIHJldmlld3NCdG5zUHJldiA9IHJldmlld3NCdG5zLnF1ZXJ5U2VsZWN0b3IoJy5yZXZpZXdzX19idG4tcHJldicpLFxyXG4gICAgICBzbGlkZXJDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXBwLXNsaWRlcl9fY29udGFpbmVyJyksXHJcbiAgICAgIHNsaWRlckxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXBwLXNsaWRlcl9fbGlzdCcpLFxyXG4gICAgICBzbGlkZXJJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hcHAtc2xpZGVyX19pdGVtJyk7XHJcblxyXG4gICBsZXQgc2xpZGVySXRlbVdpZHRoID0gcGFyc2VGbG9hdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShzbGlkZXJMaXN0KS5ncmlkQXV0b0NvbHVtbnMpLFxyXG4gICAgICBJdGVtR2FwID0gcGFyc2VGbG9hdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShzbGlkZXJMaXN0KS5jb2x1bW5HYXApLFxyXG4gICAgICBsYXN0SW5kZXggPSBNYXRoLmNlaWwoc2xpZGVySXRlbXMubGVuZ3RoKSAtIDE7XHJcblxyXG4gICBsZXQgdW5pdHMgPSBzbGlkZXJJdGVtV2lkdGggIT09IDEwMCA/ICdweCcgOiAnJScsXHJcbiAgICAgIGN1cnJlbnRJbmRleCA9IDAsXHJcbiAgICAgIHN0ZXAgPSAwLFxyXG4gICAgICB4RG93biA9IG51bGwsXHJcbiAgICAgIHlEb3duID0gbnVsbDtcclxuXHJcbiAgIHNsaWRlckNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgaGFuZGxlVG91Y2hTdGFydCwgZmFsc2UpO1xyXG4gICBzbGlkZXJDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgaGFuZGxlVG91Y2hNb3ZlLCBmYWxzZSk7XHJcbiAgIHJldmlld3NCdG5zLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ2xpY2ssIGZhbHNlKTtcclxuXHJcbiAgIGZ1bmN0aW9uIGhhbmRsZVRvdWNoU3RhcnQoZSkge1xyXG4gICAgICB4RG93biA9IGUudG91Y2hlc1swXS5jbGllbnRYO1xyXG4gICAgICB5RG93biA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xyXG4gICB9O1xyXG5cclxuICAgZnVuY3Rpb24gaGFuZGxlVG91Y2hNb3ZlKGUpIHtcclxuICAgICAgaWYgKCF4RG93biB8fCAheURvd24pIHJldHVybjtcclxuXHJcbiAgICAgIGxldCB4VXAgPSBlLnRvdWNoZXNbMF0uY2xpZW50WDtcclxuICAgICAgbGV0IHlVcCA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xyXG5cclxuICAgICAgbGV0IHhEaWZmID0geERvd24gLSB4VXA7XHJcbiAgICAgIGxldCB5RGlmZiA9IHlEb3duIC0geVVwO1xyXG5cclxuICAgICAgaWYgKE1hdGguYWJzKHhEaWZmKSA+IE1hdGguYWJzKHlEaWZmKSkge1xyXG4gICAgICAgICBpZiAoeERpZmYgPiAwICYmIGN1cnJlbnRJbmRleCA8IGxhc3RJbmRleCkgY3VycmVudEluZGV4Kys7XHJcbiAgICAgICAgIGlmICh4RGlmZiA8IDAgJiYgY3VycmVudEluZGV4ID4gMCkgY3VycmVudEluZGV4LS07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIG1vdmVTbGlkZSgpO1xyXG5cclxuICAgICAgeERvd24gPSBudWxsO1xyXG4gICAgICB5RG93biA9IG51bGw7XHJcbiAgIH07XHJcblxyXG4gICBmdW5jdGlvbiBoYW5kbGVDbGljayhlKSB7XHJcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gcmV2aWV3c0J0bnNOZXh0ICYmIGN1cnJlbnRJbmRleCA8IGxhc3RJbmRleCkgY3VycmVudEluZGV4Kys7XHJcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gcmV2aWV3c0J0bnNQcmV2ICYmIGN1cnJlbnRJbmRleCA+IDApIGN1cnJlbnRJbmRleC0tO1xyXG5cclxuICAgICAgbW92ZVNsaWRlKCk7XHJcbiAgIH07XHJcblxyXG4gICBmdW5jdGlvbiBtb3ZlU2xpZGUoKSB7XHJcbiAgICAgIGlmIChjdXJyZW50SW5kZXggPD0gMCkge1xyXG4gICAgICAgICByZXZpZXdzQnRuc1ByZXYuY2xhc3NMaXN0LmFkZCgncmV2aWV3c19fYnRuLS1kaXNhYmxlZCcpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICByZXZpZXdzQnRuc1ByZXYuY2xhc3NMaXN0LnJlbW92ZSgncmV2aWV3c19fYnRuLS1kaXNhYmxlZCcpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChjdXJyZW50SW5kZXggPj0gbGFzdEluZGV4KSB7XHJcbiAgICAgICAgIHJldmlld3NCdG5zTmV4dC5jbGFzc0xpc3QuYWRkKCdyZXZpZXdzX19idG4tLWRpc2FibGVkJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIHJldmlld3NCdG5zTmV4dC5jbGFzc0xpc3QucmVtb3ZlKCdyZXZpZXdzX19idG4tLWRpc2FibGVkJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN0ZXAgPSBjdXJyZW50SW5kZXggKiAoc2xpZGVySXRlbVdpZHRoICsgSXRlbUdhcCk7XHJcbiAgICAgIHNsaWRlckxpc3Quc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoLSR7c3RlcH0ke3VuaXRzfSlgO1xyXG4gICB9O1xyXG59KSgpIiwiOyhmdW5jdGlvbiAoKSB7XHJcbiAgIGNvbnN0IGhhbWJ1cmdlck1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGFtYnVyZ2VyLW1lbnUnKTtcclxuICAgY29uc3QgbWVudUZ1bGxzY3JlZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1mdWxsc2NyZWVuJyk7XHJcblxyXG4gICBoYW1idXJnZXJNZW51LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICBtZW51RnVsbHNjcmVlbi5jbGFzc0xpc3QuYWRkKCdtZW51LWZ1bGxzY3JlZW4tLWFjdGl2ZScpO1xyXG4gICB9KTtcclxuXHJcbiAgIG1lbnVGdWxsc2NyZWVuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoJ2EnKSkge1xyXG4gICAgICAgICBtZW51RnVsbHNjcmVlbi5jbGFzc0xpc3QucmVtb3ZlKCdtZW51LWZ1bGxzY3JlZW4tLWFjdGl2ZScpO1xyXG4gICAgICB9XHJcbiAgIH0pO1xyXG59KSgpIiwiOyhmdW5jdGlvbiAoKSB7XHJcbiAgIGNvbnN0IHF1ZXN0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5xdWVzdGlvbnMnKTtcclxuICAgY29uc3QgcXVlc3Rpb25zSXRlbXMgPSBBcnJheS5mcm9tKHF1ZXN0aW9ucy5jaGlsZHJlbik7XHJcblxyXG4gICBkaXNwbGF5QW5zd2VyKCk7XHJcblxyXG4gICBmdW5jdGlvbiBkaXNwbGF5QW5zd2VyKCkge1xyXG4gICAgICBsZXQgY3VycmVudEFjdGl2ZSA9IG51bGw7XHJcbiAgICAgIFxyXG4gICAgICBxdWVzdGlvbnMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcclxuICAgICAgICAgY3VycmVudEFjdGl2ZSA9IGUudGFyZ2V0LmNsb3Nlc3QoJy5xdWVzdGlvbnNfX2l0ZW0nKTtcclxuICAgICAgICAgXHJcbiAgICAgICAgIHF1ZXN0aW9uc0l0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpdGVtLmNsYXNzTGlzdC5jb250YWlucygncXVlc3Rpb25zX19pdGVtLS1hY3RpdmUnKSAmJiBpdGVtICE9PWN1cnJlbnRBY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdxdWVzdGlvbnNfX2l0ZW0tLWFjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgIH0pO1xyXG4gICAgICAgICBcclxuICAgICAgICAgY3VycmVudEFjdGl2ZS5jbGFzc0xpc3QudG9nZ2xlKCdxdWVzdGlvbnNfX2l0ZW0tLWFjdGl2ZScpO1xyXG4gICAgICB9KTtcclxuICAgfVxyXG59KSgpIl19
